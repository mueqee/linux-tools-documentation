#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É mailrucloud
# –ê–≤—Ç–æ—Ä: liiilia
# –î–∞—Ç–∞: 2025-07-28

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VENV_PATH="/home/liiilia/.venv"
LOG_FILE="/tmp/mailru_sync_monitor.log"
PID_FILE="/tmp/mailru_sync.pid"
STATUS_FILE="/tmp/mailru_sync_status.txt"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
send_notification() {
    local title="$1"
    local message="$2"
    local icon="${3:-dialog-information}"
    
    if command -v notify-send &> /dev/null; then
        DISPLAY=:0 \
        DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus \
        notify-send -i "$icon" "$title" "$message"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ mailrucloud
find_existing_process() {
    local mailru_pid=$(ps aux | grep mailrucloud | grep -v grep | grep sync | awk '{print $2}' | head -1)
    if [ -n "$mailru_pid" ]; then
        echo "$mailru_pid"
        return 0
    fi
    return 1
}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É
attach_to_existing() {
    local existing_pid
    if existing_pid=$(find_existing_process); then
        echo "$existing_pid" > "$PID_FILE"
        log_message "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (PID: $existing_pid)"
        send_notification "üîó Mail.ru Cloud Monitor" "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ—Ü–µ—Å—Å—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (PID: $existing_pid)"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        local process_info=$(ps -p "$existing_pid" -o cmd --no-headers)
        log_message "–ü—Ä–æ—Ü–µ—Å—Å: $process_info"
        
        # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        monitor_existing_process "$existing_pid"
        return 0
    else
        echo "–ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å mailrucloud sync –Ω–µ –Ω–∞–π–¥–µ–Ω"
        send_notification "‚ùå Mail.ru Cloud Monitor" "–ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ –ª–æ–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞
parse_process_progress() {
    local pid="$1"
    local progress_info=""
    local uploaded_files=0
    local total_files=0
    local percentage=0
    
    # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –ª–æ–≥-—Ñ–∞–π–ª—ã –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å STATUS_FILE
    local log_content=""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ STATUS_FILE
    if [ -f "$STATUS_FILE" ]; then
        log_content=$(tail -n 30 "$STATUS_FILE" 2>/dev/null)
    else
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ /proc/*/fd/* (stdout –ø—Ä–æ—Ü–µ—Å—Å–∞)
        local proc_dir="/proc/$pid"
        if [ -d "$proc_dir" ]; then
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
            log_content=$(timeout 1 strace -p "$pid" -e write 2>&1 | head -20 2>/dev/null || echo "")
        fi
    fi
    
    if [ -z "$log_content" ]; then
        echo "–ê–∫—Ç–∏–≤–µ–Ω"
        return 0
    fi
    
    # –ü–æ–∏—Å–∫ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
    total_files=$(echo "$log_content" | grep -o "Found [0-9]\+ files\|–ù–∞–π–¥–µ–Ω–æ [0-9]\+ —Ñ–∞–π–ª–æ–≤" | head -1 | grep -o "[0-9]\+")
    if [ -n "$total_files" ] && [ "$total_files" -gt 0 ]; then
        echo "$total_files" > "/tmp/mailru_total_files_$pid.tmp"
    elif [ -f "/tmp/mailru_total_files_$pid.tmp" ]; then
        total_files=$(cat "/tmp/mailru_total_files_$pid.tmp")
    fi
    
    # –ü–æ–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    uploaded_files=$(echo "$log_content" | grep -o "Uploaded [0-9]\+\|–ó–∞–≥—Ä—É–∂–µ–Ω–æ [0-9]\+" | tail -1 | grep -o "[0-9]\+")
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
    percentage=$(echo "$log_content" | grep -o "[0-9]\+%" | tail -1 | grep -o "[0-9]\+")
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ -z "$uploaded_files" ]; then
        uploaded_files=$(echo "$log_content" | grep -c "‚úì\|‚àö\|uploaded\|–∑–∞–≥—Ä—É–∂–µ–Ω\|‚Üí")
    fi
    
    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    if [ -z "$percentage" ] && [ -n "$total_files" ] && [ "$total_files" -gt 0 ] && [ -n "$uploaded_files" ]; then
        percentage=$((uploaded_files * 100 / total_files))
    fi
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if [ -n "$uploaded_files" ] && [ -n "$total_files" ] && [ "$total_files" -gt 0 ]; then
        if [ -n "$percentage" ]; then
            echo "${uploaded_files}/${total_files} ${percentage}%"
        else
            echo "${uploaded_files}/${total_files}"
        fi
    elif [ -n "$percentage" ]; then
        echo "${percentage}%"
    elif [ -n "$uploaded_files" ] && [ "$uploaded_files" -gt 0 ]; then
        echo "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${uploaded_files}"
    else
        echo "–ê–∫—Ç–∏–≤–µ–Ω"
    fi
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
monitor_existing_process() {
    local pid="$1"
    local notification_interval=300  # 5 –º–∏–Ω—É—Ç
    local last_notification=0
    local start_time=$(date +%s)
    
    log_message "–ù–∞—á–∞—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ PID: $pid"
    
    while kill -0 "$pid" 2>/dev/null; do
        local current_time=$(date +%s)
        local elapsed_time=$((current_time - start_time))
        local elapsed_minutes=$((elapsed_time / 60))
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        local cpu_usage=$(ps -p "$pid" -o %cpu --no-headers | tr -d ' ')
        local mem_usage=$(ps -p "$pid" -o %mem --no-headers | tr -d ' ')
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        local progress=$(parse_process_progress "$pid")
        
        local status="$progress (CPU: ${cpu_usage}%, RAM: ${mem_usage}%)"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        if [ $((current_time - last_notification)) -ge $notification_interval ]; then
            local hours=$((elapsed_minutes / 60))
            local minutes=$((elapsed_minutes % 60))
            local time_str=""
            
            if [ $hours -gt 0 ]; then
                time_str="${hours}—á ${minutes}–º"
            else
                time_str="${minutes}–º"
            fi
            
            send_notification "üîÑ Mail.ru Cloud Monitor" \
                "–í—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $time_str\n$status" \
                "dialog-information"
            
            log_message "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ $time_str, —Å—Ç–∞—Ç—É—Å: $status"
            last_notification=$current_time
        fi
        
        sleep 30  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    done
    
    # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
    local final_time=$((elapsed_time / 60))
    send_notification "‚úÖ Mail.ru Cloud Monitor" \
        "–ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à—ë–Ω\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${final_time}–º" \
        "dialog-positive"
    
    log_message "–ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à—ë–Ω. –û–±—â–µ–µ –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${final_time} –º–∏–Ω—É—Ç"
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    rm -f "$PID_FILE" "/tmp/mailru_total_files_$pid.tmp"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
stop_monitoring() {
    if [ -f "$PID_FILE" ]; then
        local pid=$(cat "$PID_FILE")
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ PID: $pid"
        log_message "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        send_notification "‚èπÔ∏è Mail.ru Cloud Monitor" "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        rm -f "$PID_FILE"
        exit 0
    else
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    if [ -f "$PID_FILE" ]; then
        local pid=$(cat "$PID_FILE")
        if kill -0 "$pid" 2>/dev/null; then
            local cpu_usage=$(ps -p "$pid" -o %cpu --no-headers | tr -d ' ')
            local mem_usage=$(ps -p "$pid" -o %mem --no-headers | tr -d ' ')
            local progress=$(parse_process_progress "$pid")
            
            echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ PID: $pid"
            echo "–ü—Ä–æ–≥—Ä–µ—Å—Å: $progress"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU: ${cpu_usage}%"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RAM: ${mem_usage}%"
            echo "–ö–æ–º–∞–Ω–¥–∞: $(ps -p "$pid" -o cmd --no-headers)"
        else
            echo "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω, –æ—á–∏—Å—Ç–∫–∞ PID —Ñ–∞–π–ª–∞"
            rm -f "$PID_FILE"
        fi
    else
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
        if existing_pid=$(find_existing_process); then
            echo "–ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å mailrucloud: PID $existing_pid"
            local progress=$(parse_process_progress "$existing_pid")
            echo "–ü—Ä–æ–≥—Ä–µ—Å—Å: $progress"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 attach' –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  attach   - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É mailrucloud sync"
    echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç —Å–∞–º –ø—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏)"
    echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  log      - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞"
    echo "  help     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 attach    # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ç–µ–∫—É—â–µ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
    echo "  $0 status    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  $0 stop      # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$(dirname "$LOG_FILE")"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "${1:-help}" in
    attach)
        attach_to_existing
        ;;
    stop)
        stop_monitoring
        ;;
    status)
        show_status
        ;;
    log)
        if [ -f "$LOG_FILE" ]; then
            echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:"
            tail -n 20 "$LOG_FILE"
        else
            echo "–õ–æ–≥-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        ;;
    help|*)
        show_help
        ;;
esac 