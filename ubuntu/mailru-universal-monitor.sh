#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ mailrucloud —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º
# –ê–≤—Ç–æ—Ä: liiilia
# –î–∞—Ç–∞: 2025-07-29

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LOG_FILE="/tmp/mailru_universal_monitor.log"
PROGRESS_LOG="/tmp/mailru_universal_progress.log"
STATE_FILE="/tmp/mailru_monitor_state.json"
NOTIFICATION_INTERVAL=300  # 5 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
CHECK_INTERVAL=30  # 30 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
send_notification() {
    local title="$1"
    local message="$2"
    local icon="${3:-dialog-information}"
    
    if command -v notify-send &> /dev/null; then
        DISPLAY=:0 \
        DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus \
        notify-send -i "$icon" "$title" "$message" -t 10000
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
save_state() {
    local pid="$1"
    local start_time="$2"
    local last_notification="$3"
    local source_dir="$4"
    local target_dir="$5"
    
    cat > "$STATE_FILE" << EOF
{
    "pid": $pid,
    "start_time": $start_time,
    "last_notification": $last_notification,
    "source_dir": "$source_dir",
    "target_dir": "$target_dir",
    "timestamp": $(date +%s)
}
EOF
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
load_state() {
    if [ -f "$STATE_FILE" ]; then
        cat "$STATE_FILE"
    else
        echo '{"pid": 0, "start_time": 0, "last_notification": 0}'
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ mailrucloud sync
find_all_mailru_processes() {
    ps aux | grep mailrucloud | grep sync | grep -v grep | while read line; do
        local pid=$(echo "$line" | awk '{print $2}')
        local cmd=$(echo "$line" | awk '{for(i=11;i<=NF;i++) printf "%s ", $i; print ""}' | sed 's/ $//')
        echo "$pid:$cmd"
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
parse_process_info() {
    local process_line="$1"
    local pid=$(echo "$process_line" | cut -d: -f1)
    local cmd=$(echo "$process_line" | cut -d: -f2-)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –∏ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    local source_dir=$(echo "$cmd" | grep -o 'sync [^"]*/[^"]*' | sed 's/sync //' | awk '{print $1}')
    local target_dir=$(echo "$cmd" | grep -o 'sync [^"]*/[^"]* [^"]*' | awk '{print $3}')
    
    # –ï—Å–ª–∏ –ø—É—Ç—å –≤ –∫–∞–≤—ã—á–∫–∞—Ö
    if [[ "$cmd" == *'"'* ]]; then
        source_dir=$(echo "$cmd" | sed -n 's/.*sync "\([^"]*\)".*/\1/p')
        target_dir=$(echo "$cmd" | sed -n 's/.*sync "[^"]*" "\([^"]*\)".*/\1/p')
    fi
    
    echo "$pid|$source_dir|$target_dir"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
get_process_progress() {
    local pid="$1"
    local source_dir="$2"
    local uploaded_files=0
    local total_files=0
    local current_file=""
    local network_activity=""
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ç–µ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    local net_stats=$(ss -t | grep -c "cloud.mail.ru" 2>/dev/null || echo "0")
    if [ "$net_stats" -gt 0 ]; then
        network_activity="–°–µ—Ç—å –∞–∫—Ç–∏–≤–Ω–∞"
    fi
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    local open_files=$(lsof -p "$pid" 2>/dev/null | grep -E "\.(zip|rar|jpg|jpeg|png|pdf|doc|docx|mp4|avi|mov)$" | tail -1)
    if [ -n "$open_files" ]; then
        current_file=$(echo "$open_files" | awk '{print $NF}' | xargs basename)
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–∞
    local elapsed_seconds=$(ps -o etime= -p "$pid" 2>/dev/null | head -1 | awk -F: '{
        if(NF==3) print $1*3600+$2*60+$3; 
        else if(NF==2) print $1*60+$2;
        else print $1
    }' | tr -d ' ')
    
    # –û—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å)
    if [ -n "$elapsed_seconds" ] && [ "$elapsed_seconds" -gt 0 ]; then
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–æ–≤
        local files_per_minute=4  # –±–∞–∑–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—É—Ç–∏
        if [[ "$source_dir" == *"—Ñ–æ—Ç–æ"* ]] || [[ "$source_dir" == *"photo"* ]] || [[ "$source_dir" == *"images"* ]]; then
            files_per_minute=2  # —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–µ–µ
        elif [[ "$source_dir" == *"UI"* ]] || [[ "$source_dir" == *"design"* ]]; then
            files_per_minute=6  # UI —Ñ–∞–π–ª—ã –±—ã—Å—Ç—Ä–µ–µ
        fi
        
        uploaded_files=$((elapsed_seconds * files_per_minute / 60))
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
        local cache_file="/tmp/mailru_total_${pid}.tmp"
        if [ ! -f "$cache_file" ] && [ -d "$source_dir" ]; then
            total_files=$(find "$source_dir" -type f 2>/dev/null | wc -l)
            echo "$total_files" > "$cache_file"
        elif [ -f "$cache_file" ]; then
            total_files=$(cat "$cache_file")
        fi
    fi
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    local progress_text=""
    if [ "$total_files" -gt 0 ] && [ "$uploaded_files" -gt 0 ]; then
        local percentage=$((uploaded_files * 100 / total_files))
        if [ "$percentage" -gt 100 ]; then
            percentage=99
        fi
        progress_text="${uploaded_files}/${total_files} ${percentage}%"
    elif [ "$uploaded_files" -gt 0 ]; then
        progress_text="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ~${uploaded_files} —Ñ–∞–π–ª–æ–≤"
    else
        progress_text="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..."
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    local folder_name=$(basename "$source_dir")
    progress_text="üìÅ $folder_name: $progress_text"
    
    if [ -n "$current_file" ]; then
        progress_text="$progress_text - $current_file"
    fi
    
    if [ -n "$network_activity" ]; then
        progress_text="$progress_text ($network_activity)"
    fi
    
    echo "$progress_text"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
monitor_process() {
    local pid="$1"
    local source_dir="$2"
    local target_dir="$3"
    
    if ! kill -0 "$pid" 2>/dev/null; then
        log_message "–ü—Ä–æ—Ü–µ—Å—Å $pid –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
        return 1
    fi
    
    local current_time=$(date +%s)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    local state=$(load_state)
    local last_notification=$(echo "$state" | grep -o '"last_notification": [0-9]*' | awk '{print $2}' | tr -d ',')
    local monitor_start_time=$(echo "$state" | grep -o '"start_time": [0-9]*' | awk '{print $2}' | tr -d ',')
    
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
    if [ "$monitor_start_time" -eq 0 ] || [ "$pid" != "$(echo "$state" | grep -o '"pid": [0-9]*' | awk '{print $2}' | tr -d ',')" ]; then
        monitor_start_time=$current_time
        last_notification=0
        log_message "–ù–∞—á–∞—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ PID: $pid ($source_dir ‚Üí $target_dir)"
        send_notification "üîÑ Mail.ru Cloud Monitor" "–ù–∞—á–∞—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\nüìÅ $(basename "$source_dir")"
    fi
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞
    local cpu_usage=$(ps -p "$pid" -o %cpu --no-headers 2>/dev/null | tr -d ' ')
    local mem_usage=$(ps -p "$pid" -o %mem --no-headers 2>/dev/null | tr -d ' ')
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    local progress=$(get_process_progress "$pid" "$source_dir")
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    echo "[$(date '+%H:%M:%S')] PID:$pid $progress (CPU: ${cpu_usage}%, RAM: ${mem_usage}%)" >> "$PROGRESS_LOG"
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    if [ $((current_time - last_notification)) -ge $NOTIFICATION_INTERVAL ]; then
        local elapsed_time=$((current_time - monitor_start_time))
        local elapsed_minutes=$((elapsed_time / 60))
        local hours=$((elapsed_minutes / 60))
        local minutes=$((elapsed_minutes % 60))
        local time_str=""
        
        if [ $hours -gt 0 ]; then
            time_str="${hours}—á ${minutes}–º"
        else
            time_str="${minutes}–º"
        fi
        
        local detailed_status="‚è±Ô∏è –í—Ä–µ–º—è: $time_str\nüìä $progress\nüñ•Ô∏è CPU: ${cpu_usage}%, RAM: ${mem_usage}%"
        
        send_notification "üîÑ Mail.ru Cloud Sync" "$detailed_status" "dialog-information"
        log_message "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: $time_str, –ø—Ä–æ–≥—Ä–µ—Å—Å: $progress"
        
        last_notification=$current_time
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    save_state "$pid" "$monitor_start_time" "$last_notification" "$source_dir" "$target_dir"
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main_monitor_loop() {
    log_message "–ó–∞–ø—É—Å–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ mailrucloud"
    send_notification "üöÄ Mail.ru Cloud Monitor" "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
    
    local current_pid=0
    
    while true; do
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        local processes=$(find_all_mailru_processes)
        
        if [ -z "$processes" ]; then
            if [ "$current_pid" -ne 0 ]; then
                log_message "–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã mailrucloud –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
                send_notification "‚úÖ Mail.ru Cloud Monitor" "–í—Å–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã" "dialog-positive"
                current_pid=0
                rm -f "$STATE_FILE" /tmp/mailru_total_*.tmp
            fi
            sleep $CHECK_INTERVAL
            continue
        fi
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–∞–º—ã–π –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å (—Å –Ω–∞–∏–±–æ–ª—å—à–∏–º PID)
        local latest_process=$(echo "$processes" | sort -t: -k1 -n | tail -1)
        local process_info=$(parse_process_info "$latest_process")
        local new_pid=$(echo "$process_info" | cut -d'|' -f1)
        local source_dir=$(echo "$process_info" | cut -d'|' -f2)
        local target_dir=$(echo "$process_info" | cut -d'|' -f3)
        
        # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω–∏–ª—Å—è
        if [ "$new_pid" != "$current_pid" ]; then
            if [ "$current_pid" -ne 0 ]; then
                log_message "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–æ—Ü–µ—Å—Å–∞ $current_pid –Ω–∞ $new_pid"
                send_notification "üîÑ Mail.ru Cloud Monitor" "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é\nüìÅ $(basename "$source_dir")"
            fi
            current_pid=$new_pid
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
            save_state "$current_pid" 0 0 "$source_dir" "$target_dir"
        fi
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å
        if ! monitor_process "$current_pid" "$source_dir" "$target_dir"; then
            # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
            local final_progress=$(get_process_progress "$current_pid" "$source_dir")
            send_notification "‚úÖ Mail.ru Cloud Sync" \
                "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüìÅ $(basename "$source_dir")\nüìä $final_progress" \
                "dialog-positive"
            log_message "–ü—Ä–æ—Ü–µ—Å—Å $current_pid –∑–∞–≤–µ—Ä—à—ë–Ω: $final_progress"
            current_pid=0
            rm -f "/tmp/mailru_total_${current_pid}.tmp"
        fi
        
        sleep $CHECK_INTERVAL
    done
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
show_status() {
    local processes=$(find_all_mailru_processes)
    
    if [ -z "$processes" ]; then
        echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã mailrucloud –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
    
    echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã mailrucloud sync:"
    echo "================================="
    
    local count=1
    echo "$processes" | while read process_line; do
        local process_info=$(parse_process_info "$process_line")
        local pid=$(echo "$process_info" | cut -d'|' -f1)
        local source_dir=$(echo "$process_info" | cut -d'|' -f2)
        local target_dir=$(echo "$process_info" | cut -d'|' -f3)
        
        local progress=$(get_process_progress "$pid" "$source_dir")
        local cpu_usage=$(ps -p "$pid" -o %cpu --no-headers 2>/dev/null | tr -d ' ')
        local mem_usage=$(ps -p "$pid" -o %mem --no-headers 2>/dev/null | tr -d ' ')
        
        echo "$count. PID: $pid"
        echo "   –ü—Ä–æ–≥—Ä–µ—Å—Å: $progress"
        echo "   –†–µ—Å—É—Ä—Å—ã: CPU ${cpu_usage}%, RAM ${mem_usage}%"
        echo "   –ü—É—Ç—å: $source_dir ‚Üí $target_dir"
        echo ""
        
        count=$((count + 1))
    done
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    if [ -f "$PROGRESS_LOG" ]; then
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
        tail -n 5 "$PROGRESS_LOG"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start        - –ó–∞–ø—É—Å—Ç–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "  status       - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "  logs         - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  stop         - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "  help         - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:"
    echo "  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "  ‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏"
    echo "  ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç"
    echo "  ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"
    echo "  ‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
stop_monitor() {
    local monitor_pids=$(ps aux | grep mailru-universal-monitor | grep -v grep | awk '{print $2}')
    
    if [ -n "$monitor_pids" ]; then
        echo "$monitor_pids" | xargs kill 2>/dev/null
        log_message "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        send_notification "‚èπÔ∏è Mail.ru Cloud Monitor" "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    start)
        main_monitor_loop
        ;;
    status)
        show_status
        ;;
    logs)
        if [ -f "$LOG_FILE" ]; then
            echo "–û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥:"
            tail -n 20 "$LOG_FILE"
            echo ""
        fi
        if [ -f "$PROGRESS_LOG" ]; then
            echo "–õ–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:"
            tail -n 10 "$PROGRESS_LOG"
        fi
        ;;
    stop)
        stop_monitor
        ;;
    help|*)
        show_help
        ;;
esac 